package kr.or.ddit.member.controller;

import java.util.HashMap;
import java.util.Map;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.inject.Inject;

import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import kr.or.ddit.member.exception.UserNotFoundException;
import kr.or.ddit.member.service.IMemberService;
import kr.or.ddit.vo.MemberVO;

/**
 * @author 허민지
 * @since 2019. 11. 8.
 * @version 1.0
 * @see javax.servlet.http.HttpServlet
 * <pre>
 * [[개정이력(Modification Information)]]
 * 수정일                          수정자               수정내용
 *
 * --------     --------    ----------------------
 * 2019. 11. 8.      허민지       최초작성
 * Copyright (c) 2019 by DDIT All right reserved
 * </pre>
 */
@RestController
public class IdCheckController{
	
	@Inject
	IMemberService service;
	
	@RequestMapping(value="/member/idCheck.do", method=RequestMethod.POST, produces=MediaType.APPLICATION_JSON_UTF8_VALUE)
	public Map<String, Object> doPost(@RequestParam(required=true) String memId){
		Pattern regex = Pattern.compile("([a-z][a-zA-Z0-9]{3,11})");
		Matcher matcher = regex.matcher(memId);
		while(matcher.find()) {
			System.out.println(matcher.group(1));
		}
		Map<String, Object> result = new HashMap<>();
		try {
			service.retrieveMember(new MemberVO(memId, null));
			result.put("valid", new Boolean(false));
		}catch (UserNotFoundException e) {
			result.put("valid", new Boolean(true));
			result.put("useId", memId);
		}
		return result;
	}
}
