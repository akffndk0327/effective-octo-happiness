package kr.or.ddit.recipereply.controller;

import java.util.HashMap;
import java.util.Map;

import javax.inject.Inject;
import javax.servlet.http.HttpServletResponse;

import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import kr.or.ddit.enums.ServiceResult;
import kr.or.ddit.recipereply.service.IReplyService;
import kr.or.ddit.vo.ReplyVO;

@Controller
public class RecipeReplyController {
	@Inject
	IReplyService service;

	@ResponseBody
	@RequestMapping(value = "recipe/replyInsert.do",method=RequestMethod.POST,produces=MediaType.APPLICATION_JSON_UTF8_VALUE)
	public Map replyInsert(@RequestParam String cont,
			@RequestParam String loginId,
			@RequestParam int recipeNo,ModelAndView mav) {
		System.out.println(recipeNo);
		System.out.println(loginId);
		System.out.println(cont);
		ReplyVO reply=new ReplyVO();
		reply.setMemId(loginId);
		reply.setRepCont(cont);
		reply.setRecipeNo(recipeNo);
		ServiceResult result = service.insertReply(reply);
		
		Map<String, String> map = new HashMap<>();
		String status=null;
		if(result.equals(ServiceResult.OK)) {
			status="OK";
		}else {
			status="FAIL";
		}
		
		map.put("status", status);
//		mav.addObject(map);
//		mav.setViewName("recipe/recipeView");
		return map;
	}

	@ResponseBody
	@RequestMapping(value = "recipe/replyDelete.do",method=RequestMethod.POST,produces=MediaType.APPLICATION_JSON_UTF8_VALUE)
	public String replyDelete(@RequestParam String repNo, HttpServletResponse response) {
        response.setContentType("application/json");

		ReplyVO reply=new ReplyVO();
		reply.setRepId(repNo);
		ServiceResult result = service.deleteReply(reply);
		
		String status=null;
		if(result.equals(ServiceResult.OK)) {
			status="OK";
		}else {
			status="FAIL";
		}
		return status;
	}
	
	@ResponseBody
	@RequestMapping(value = "recipe/replyUpdate.do",method=RequestMethod.POST,produces=MediaType.APPLICATION_JSON_UTF8_VALUE)
	public Map replyUpdate(@RequestParam String repNo) {
		ReplyVO reply=new ReplyVO();
		reply.setRepId(repNo);
		ServiceResult result = service.deleteReply(reply);
		
		Map<String, String> map = new HashMap<>();
		String status=null;
		if(result.equals(ServiceResult.OK)) {
			status="OK";
		}else {
			status="FAIL";
		}
		map.put("status", status);
		return map;
	}
}
