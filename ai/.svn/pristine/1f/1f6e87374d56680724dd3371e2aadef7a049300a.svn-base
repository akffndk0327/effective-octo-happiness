<?xml version="1.0" encoding="UTF-8"?>
<!--  [[개정이력(Modification Information)]]       -->
<!--  수정일        수정자     수정내용               -->
<!--  2019. 11. 05 허민지 RestTemplate 추가 -->
<!--  ==========   ======    ==============        -->
<!--  2019. 11. 3.    허민지     최초작성               -->
<!--  Copyright (c) ${year} by DDIT All right reserved -->

<beans:beans 
   xmlns="http://www.springframework.org/schema/mvc"
   xmlns:beans="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:c="http://www.springframework.org/schema/c"
   xmlns:context="http://www.springframework.org/schema/context"
   xmlns:p="http://www.springframework.org/schema/p"
   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
      http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">
   
   <!-- 
      HandlerMapping/HandlerAdapter/ViewResolver/MessageConveter 등 
      MVC 모듈의 기본 전략(27가지)이 자동 등록됨.
    -->
   <annotation-driven />
   
   <beans:bean id="IRVR" class="org.springframework.web.servlet.view.InternalResourceViewResolver"
      p:prefix="/WEB-INF/views/"
      p:suffix=".jsp"
   />

   <!-- 타일즈 설정 -->   
   <beans:bean id="TVR" class="org.springframework.web.servlet.view.tiles3.TilesViewResolver" 
      p:order="1"
   />
   
   <beans:bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles3.TilesConfigurer"
      p:definitions="classpath:/kr/or/ddit/tiles/*-definitions.xml"
      p:preparerFactoryClass="org.springframework.web.servlet.view.tiles3.SpringBeanPreparerFactory"
   />

   <!-- 등록된 bean name으로 뷰 찾기 -->
   <beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver"
      p:order="2"
   />
   <beans:bean id="jsonView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"   />
<!--    <beans:bean id="downloadView" class="kr.or.ddit.board.view.DownloadView"></beans:bean> -->
   
   <!-- 정적요청, 동적요청이 분산되어 관리되고 있을때  -->
   <default-servlet-handler/>

   <!-- 파일관리(파싱작업) -->
   <beans:bean id="multipartResolver" class="org.springframework.web.multipart.support.StandardServletMultipartResolver"></beans:bean>
   
   <!-- 상하위 컨테이너에 별개의 빈을 등록 -->
   <context:component-scan base-package="kr.or.ddit" use-default-filters="false">
		<context:include-filter type="annotation" 
				expression="org.springframework.stereotype.Controller"/>		
		<context:include-filter type="annotation" 
				expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
		<context:include-filter type="annotation" 
				expression="kr.or.ddit.common.annotations.Preparer"/>				
	</context:component-scan>
   
   
   <!-- 커맨드 핸들러 앞에서 작동 데코레이션 패턴 -->
   <interceptors>
      <!-- 캐시를 일괄적으로 남기지 않게 설정 -->
      <interceptor>
         <mapping path="/**/*.js"/>
         <mapping path="/**/*.html"/>
         <mapping path="/images/**"/>
         <beans:bean class="org.springframework.web.servlet.mvc.WebContentInterceptor"
            p:cacheSeconds="0"
         />
      </interceptor>
   </interceptors>
   
   <!-- Template -->
   <beans:bean id="restTemplate" class="org.springframework.web.client.RestTemplate" />
   
   
   <view-controller path="/login" view-name="login/loginForm"/>
   <view-controller path="/" view-name="index"/>
   
</beans:beans>