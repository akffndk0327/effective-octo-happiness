package kr.or.ddit.member.controller;

import java.util.List;

import javax.inject.Inject;
import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.Errors;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import kr.or.ddit.addrChart.service.IMemChartService;
import kr.or.ddit.enums.ServiceResult;
import kr.or.ddit.member.service.IMemberService;
import kr.or.ddit.vo.AllergySymtomVO;
import kr.or.ddit.vo.AllergyVO;
import kr.or.ddit.vo.MemAllergyVO;
import kr.or.ddit.vo.MemberVO;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
/**
 * @author 허민지
 * @since 2019. 11. 6.
 * @version 1.0
 * @see javax.servlet.http.HttpServlet
 * <pre>
 * [[개정이력(Modification Information)]]
 * 수정일                    수정자               수정내용
 * --------     --------    ----------------------
 * 2019. 11. 6.     허민지       최초작성
 * 2019. 11. 9      허민지       create 추가
 * Copyright (c) 2019 by DDIT All right reserved
 * </pre>
 */
@Controller
@RequestMapping("/member")
public class MemberInsertController {

	@Inject
	IMemberService service;
	
	@Inject
	IMemChartService memChartService;
	
	//일반회원가입
	@RequestMapping(value="signUp.do", method=RequestMethod.GET)
	public String selectAllergyList(Model model){
		List<String> allergy = service.retrieveListAllergy();
		List<String> symtom = service.retrieveSytomsList();
		model.addAttribute("allergy", allergy);
		model.addAttribute("symtom", symtom);
		return "member/memberForm";
	}
	
	
	@RequestMapping(value="memberInsert.do",method=RequestMethod.POST)
	public String createMember(
			@Valid @ModelAttribute("member") MemberVO member,
			Errors errors,
			Model model
			) {
		
		boolean valid = !errors.hasErrors();
		
		String viewName = "member/memberForm";
		String message = null;
		if(valid) {
			ServiceResult result = service.createMember(member);
			switch(result) {
			case PKDUPLICATED:
				message = "아이디 중복";
				viewName = "member/memberForm";
				break;
			case FAILED:
				message = "서버오류";
				viewName = "member/memberForm";
				break;
			default :
//				memChart(member);
				message = "회원가입 완료";
				viewName = "redirect:/";
				
				break;
			}
		} else {
			viewName = "member/memberForm";
		}
		model.addAttribute("message", message);
		return viewName;
	}
	
	
    @ResponseBody
    @RequestMapping(value ="VerifyRecaptcha", method = RequestMethod.POST)
    public int VerifyRecaptcha(HttpServletRequest request) {
        VerifyRecaptcha.setSecretKey("6LflpcMUAAAAAAX1dkpNRvOFla2QUM0mvLmkow4m");
        String gRecaptchaResponse = request.getParameter("recaptcha");
        System.out.println(gRecaptchaResponse);
        //0 = 성공, 1 = 실패, -1 = 오류
        try {
            if(VerifyRecaptcha.verify(gRecaptchaResponse))
                return 0;
            else return 1;
        } catch (IOException e) {
            e.printStackTrace();
            return -1;
        }
    }

//    public AllergyVO memChart(MemberVO member) {
//    	List<AllergyVO> allergy =  memChartService.selectGender(member);
//    	int tmp = 0;
//    	for(int i=0;i<allergy.size();i++) {
//    		int cnt = allergy.get(i).getCnt();
//    		int cnt2 = allergy.get(i+1).getCnt();
//    		if(cnt<cnt2) {
//    			tmp = cnt2;
//    			cnt2 = cnt;
//    			cnt = tmp;
//    		} 
//    		System.err.println("알레르기 : "  + allergy.get(1).getAllName());
//    	}
//		return null;
//    }
	
}
