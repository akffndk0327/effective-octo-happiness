package kr.or.ddit.survey.service;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;

import javax.inject.Inject;

import org.apache.commons.lang3.StringUtils;
import org.springframework.stereotype.Service;

import kr.or.ddit.enums.ServiceResult;
import kr.or.ddit.survey.dao.ISurveyDAO;
import kr.or.ddit.vo.ExampleVO;
import kr.or.ddit.vo.PagingInfoVO;
import kr.or.ddit.vo.QuestionVO;
import kr.or.ddit.vo.SurveyResultVO;
import kr.or.ddit.vo.SurveyVO;

@Service
public class SurveyServiceImpl implements ISurveyService {
	@Inject
	ISurveyDAO dao;

	@Override
	public ServiceResult insertSurvey(SurveyVO survey) {
		ServiceResult result = null;
		int cnt = dao.insertSurvey(survey);// survey 삽입
		int surId = 0;// 설문조사 아이디
		List<QuestionVO> questionlist = survey.getQuestionList();
		List<QuestionVO> qlist = new ArrayList<QuestionVO>();
		List<QuestionVO> elist = new ArrayList<QuestionVO>();

		if (cnt > 0) {// 설문조사 삽입이 잘 되었으면!
			surId = dao.getSurveyId();
			if (questionlist!=null) {
				for (int i = 0; i < questionlist.size(); i++) {
					if (!(questionlist.get(i).getQuestCont() == null)) {
						qlist.add(questionlist.get(i));
					}
				}
			}
		}
		if (surId == 0) {
			result = ServiceResult.FAILED;
		}

		// 질문 삽입
		List<Integer> questionID = new ArrayList<>();
		for (int i = 0; i < qlist.size(); i++) {
			QuestionVO quest = new QuestionVO();
			quest.setSurveyId(surId + "");
			quest.setQuestCont(qlist.get(i).getQuestCont());
			quest.setQuestType(qlist.get(i).getQuestType());
			dao.insertQuestion(quest);

			if (qlist.get(i).getQuestType().equals("example")) {
				questionID.add(dao.getQuestion());
				System.out.println("dao.getQ  " + dao.getQuestion());
			}
		}

		// 객관식만 거르기
		for (int i = 0; i < qlist.size(); i++) {
			if (qlist.get(i).getQuestType().equals("example")) {
				elist.add(qlist.get(i));
			}
		}

		// 답변항목 삽입
		for (int i = 0; i < elist.size(); i++) {
			for (int j = 0; j < elist.get(i).getExampleList().size(); j++) {
				ExampleVO example = new ExampleVO();
				String examCont = elist.get(i).getExampleList().get(j).getExamCont().toString();

				String[] excont = examCont.split(",");
				for (int k = 0; k < excont.length; k++) {
					example.setExamCont(excont[k]);
					example.setQuestionId(questionID.get(i) + "");
					dao.insertExample(example);
				}
			}
		}

		result = ServiceResult.OK;

		return result;

	}

	@Override
	public List<SurveyVO> selectSurveyList(PagingInfoVO<SurveyVO> pagingVO) {
		// TODO Auto-generated method stub
		return dao.selectSurveyList(pagingVO);
	}

	@Override
	public SurveyVO selectSurvey(String recipe) {
		// TODO Auto-generated method stub
		return dao.selectSurvey(recipe);
	}

	@Override
	public int selectSurveyCount(PagingInfoVO<SurveyVO> pagingVO) {
		// TODO Auto-generated method stub
		return dao.selectSurveyCount(pagingVO);
	}

	@Override
	public ServiceResult insertSurveyResult(SurveyResultVO result) {
		ServiceResult status=null;
		List<SurveyResultVO> list=result.getList();
		
		for (int i = 0; i < list.size(); i++) {//빈 값 정리
			if(StringUtils.isBlank(list.get(i).getTokenResult())&&StringUtils.isBlank(list.get(i).getExamId())) {
				list.get(i).setTokenResult("");
			}
		}
		
		System.out.println(list);

		for (int i = 0; i < list.size(); i++) {
			SurveyResultVO vo = new SurveyResultVO();
			vo.setSurId(list.get(i).getSurId());
			vo.setQuestId(list.get(i).getQuestId());
			
			if(StringUtils.isBlank(list.get(i).getExamId())) {
				vo.setTokenResult(list.get(i).getTokenResult());
			}
			
			if(StringUtils.isBlank(list.get(i).getTokenResult())) {
				vo.setExamId(list.get(i).getExamId());
			}
			
			dao.insertSurveyResult(vo);
		}
		status = ServiceResult.OK;
		return status;
	}

	@Override
	public List<SurveyResultVO> selectSurveyResponse(int surId) {
		
		return dao.selectSurveyResponse(surId);
	}

	@Override
	public List<ExampleVO> selectExample(int surId){
		return dao.selectExample(surId);
	}

	@Override
	public int deleteSurvey(SurveyVO survey) {
		// TODO Auto-generated method stub
		return  dao.deleteSurvey(survey);
	}
}
