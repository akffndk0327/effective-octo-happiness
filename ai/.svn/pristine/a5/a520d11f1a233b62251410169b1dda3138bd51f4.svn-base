<?xml version="1.0" encoding="UTF-8"?>
<!--  [[개정이력(Modification Information)]]       -->
<!--  수정일                  수정자     수정내용               -->
<!--  2019. 11. 6	  허민지   	  mypage 주석해제-->
<!--  ==========   ======    ==============        -->
<!--  2019. 11. 3.    허민지     최초작성               -->
<!--  Copyright (c) ${year} by DDIT All right reserved -->
<beans:beans 
	xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:c="http://www.springframework.org/schema/c"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd">


	<beans:bean id="userDetailsService" class="kr.or.ddit.member.service.CustomUserDetailService" />
	
	<beans:bean id="authenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider" 
		p:hideUserNotFoundExceptions="false"
		p:userDetailsService-ref="userDetailsService"
	/>
	
	<authentication-manager id="authenticationManager">
		<authentication-provider ref="authenticationProvider" />
	</authentication-manager>

	<beans:bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
		<beans:constructor-arg name="decisionVoters">
			<beans:list>
				<beans:bean class="org.springframework.security.access.vote.AuthenticatedVoter" />
				<beans:bean class="org.springframework.security.access.vote.RoleVoter" />
				<beans:bean class="org.springframework.security.web.access.expression.WebExpressionVoter" />
			</beans:list>
		</beans:constructor-arg>
	</beans:bean>
	
	<!-- 	보호된 자원에 설정된 권한 정보 조회 -->
	<beans:bean id="requestMap" class="kr.or.ddit.common.security.auth.RequestMapFactoryBean" />
	
<!-- 	시큐리티 필터가 자원에 대한 접근 여부를 허가할때 참고할 권한 정보 설정 담당 : role 명으로만 접근 제어를 할때 사용 -->
	<beans:bean id="filterInvocationSecurityMetadataSource" class="org.springframework.security.web.access.intercept.DefaultFilterInvocationSecurityMetadataSource" 
		c:requestMap-ref="requestMap"
	/>
<!-- 	spEL형태의 빌트인 함수를 파싱하기 위한 expressionHandler  -->	
<!-- 	<beans:bean id="webSecurityExpressionHandler" class="org.springframework.security.web.access.expression.DefaultWebSecurityExpressionHandler"  /> -->
<!-- 	시큐리티 필터가 자원에 대한 접근 여부를 허가할때 참고할 권한 정보 설정 담당 : spEL형태의 빌트인 함수로 접근 제어 -->
<!-- 	<beans:bean id="filterInvocationSecurityMetadataSource" class="org.springframework.security.web.access.expression.ExpressionBasedFilterInvocationSecurityMetadataSource"  -->
<!-- 		c:requestMap-ref="requestMap" -->
<!-- 		c:expressionHandler-ref="webSecurityExpressionHandler" -->
<!-- 	/> -->
	
	<!-- 	자원에 대한 접근 요청을 통제할 필터 -->
	<beans:bean id="filterSecurityInterceptor" class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor" 
		p:authenticationManager-ref="authenticationManager"
		p:accessDecisionManager-ref="accessDecisionManager"
		p:securityMetadataSource-ref="filterInvocationSecurityMetadataSource"
	/>
	<!-- 	<security:authorize url="/member/memberList.do"></security:authorize> 와 같은 형태의 선택적 랜더링 적용을 위한 전략빈 -->
	<beans:bean class="org.springframework.security.web.access.DefaultWebInvocationPrivilegeEvaluator" 
		c:securityInterceptor-ref="filterSecurityInterceptor"	
	/>
	
	<!-- RememberMeToken 저장소 생성 : inMemory(InMemoryTokenRepositoryImpl)/DataBase(JdbcTokenRepositoryImpl)-->
<!-- 		p:createTableOnStartup="true" : 처음 한번만 실행할 것. -->
	<beans:bean id="persistentTokenRepository" class="org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl" 
		p:dataSource-ref="dataSource"
	/>
	
	<beans:bean id="rememberMeServices" class="org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices" 
		c:tokenRepository-ref="persistentTokenRepository"
		c:userDetailsService-ref="userDetailsService"
		c:key="sampleKey"
		p:tokenValiditySeconds="#{60*60*24*7}"
		p:parameter="idSave"
	/> 
	
	<beans:bean id="authenticationSuccessHandler" class="kr.or.ddit.common.security.CustomAuthenticateSuccessHandler" 
		p:defaultTargetUrl="/"
		p:alwaysUseDefaultTargetUrl="false"
	/>
	<beans:bean id="logoutSuccessHandler" class="kr.or.ddit.common.security.CustomLogoutSuccessHandler" />
	
	<http pattern="*.html" security="none" />
	<http pattern="*.js" security="none" />
	<http pattern="*.css" security="none" />
	<http auto-config="true" use-expressions="true">
		<form-login login-page="/login" 
			username-parameter="memId"
			password-parameter="memPass"
			login-processing-url="/loginProcess"
			default-target-url="/"
			authentication-failure-url="/login?error=true"
			always-use-default-target="false"
			authentication-success-handler-ref="authenticationSuccessHandler"
		/>
		<csrf disabled="true"/>
		<logout logout-url="/logout" 
			invalidate-session="true" 
			success-handler-ref="logoutSuccessHandler"		
		/>
		
		<csrf disabled="true"/>

		<remember-me services-ref="rememberMeServices" />
		
		<custom-filter ref="filterSecurityInterceptor" before="FILTER_SECURITY_INTERCEPTOR"/>
<!-- 		<intercept-url pattern="/member/memberInsert.do" access="isAnonymous()"/> -->
<!-- 		<intercept-url pattern="/member/memberUpdate.do" access="isAuthenticated()"/> -->
<!-- 		<intercept-url pattern="/member/memberDelete.do" access="isAuthenticated()"/> -->
		<intercept-url pattern="mypage/**" access="isAuthenticated()"/>
<!-- 		<intercept-url pattern="/member/**" access="hasRole('ROLE_ADMIN')" /> -->
<!-- 		<intercept-url pattern="/prod/prodUpdate.do" access="hasRole('ROLE_ADMIN')"/> -->
<!-- 		<intercept-url pattern="/othersAllergies/othersAllergiesUpdate.do" access="hasRole('ROLE_ADMIN')"/> -->
<!-- 		<intercept-url pattern="/prod/prodInsert.do" access="hasRole('ROLE_ADMIN')"/> -->
<!-- 		<intercept-url pattern="/alba/**" access="hasRole('ROLE_ADMIN')"/> -->
		<intercept-url pattern="/**" access="permitAll"/>
	</http>
	
</beans:beans>


