package kr.or.ddit.diet.controller;

import java.time.Month;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import javax.inject.Inject;

import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;

import kr.or.ddit.diet.service.IDietService;
import kr.or.ddit.vo.MonthlyVO;
import kr.or.ddit.vo.OnedayVO;
import kr.or.ddit.vo.PagingInfoVO;
import kr.or.ddit.vo.UneatableVO;

/**
 * 
 * @author 박슬기
 * @since 2019. 11. 6.
 * @version 1.0
 * @see javax.servlet.http.HttpServlet
 * 
 *      <pre>
 * [[개정이력(Modification Information)]]
 * 수정일             수정자               수정내용
 * 2019.11.07		박슬기		DietView수정
 * --------     --------    ----------------------
 * 2019. 11. 6.      박슬기       최초작성
 * Copyright (c) 2019 by DDIT All right reserved
 *      </pre>
 */
@Controller
public class DietRetrieve {
	@Inject
	IDietService service;

	@RequestMapping("diet/dietList.do")
	public String selectDietList(@RequestParam(required = false) String searchWord,
			@RequestParam(name = "page", required = false, defaultValue = "1") int currentPage, Model model) {
		Map<String, Object> searchMap = new HashMap<>();
		searchMap.put("searchWord", searchWord);

		PagingInfoVO<MonthlyVO> pagingVO = new PagingInfoVO<>(10, 5);
		MonthlyVO searchVO = new MonthlyVO();
		pagingVO.setSearchVO(searchVO);
		pagingVO.setSearchMap(searchMap);

		int totalRecord = service.retrieveDietCount(pagingVO);
		pagingVO.setTotalRecord(totalRecord);
		pagingVO.setCurrentPage(currentPage);

		List<MonthlyVO> m_list = service.retrieveDietList(pagingVO);
		for (int i = 0; i < m_list.size(); i++) {
			if (m_list.get(i).getMonthlyUse().equals("N")) {
				m_list.get(i).setMenuId("비밀글입니다.");
			}
		}
		pagingVO.setDataList(m_list);
		model.addAttribute("pagingVO", pagingVO);
		return "diet/dietList";
	}

	@RequestMapping("diet/dietView.do")
	public ModelAndView selectDiet(@RequestParam(required = true) String monthlyId, 
			@RequestParam(required = true) String memId) {
		ModelAndView mav = new ModelAndView();
		List<OnedayVO> o_list = service.retrieveDiet(monthlyId);
		mav.addObject("o_list", o_list);
		mav.addObject("writer", memId);
		mav.setViewName("diet/dietView");
		return mav;

	}
}
